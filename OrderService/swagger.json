{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Restaurant and Order Chart"
  },
  "schemes": [
    "http"
  ],
  "paths": {
    "/orders/all": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Finds Order tags",
        "description": "Fetches all the Orders from all the cities",
        "operationId": "findordersByTags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "access-token"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Invalid ID order"
          },
          "404": {
            "description": "order not found"
          }
        },
        "deprecated": false
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Place new Order of food from a restaurant",
        "description": "Enter restaurant ID, total quantity, amount and city",
        "operationId": "addorder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "access-token"
          },
          {
            "in": "body",
            "name": "body",
            "description": "order object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/orders/{orderId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Find order by ID",
        "description": "Returns a single order",
        "operationId": "getorderById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "access-token"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order return",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Invalid ID order"
          },
          "404": {
            "description": "order not found"
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Update a order",
        "description": "",
        "operationId": "putorder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "access-token"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "order id to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "order object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "order not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "summary": "Delete a order",
        "description": "",
        "operationId": "deleteorder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "access-token"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "order id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "order not found"
          }
        }
      }
    },
    "/orders/{restaurantId}/{city}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "get total order amount by city",
        "description": "",
        "operationId": "get order details by restaurant ID",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "description": "ID of order",
            "required": true,
            "type": "string"
          },
          {
            "name": "city",
            "in": "path",
            "description": "Additional data to pass to server",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OrderTotal"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "access-token",
      "in": "header"
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "restaurantId": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "Amount": {
          "type": "integer",
          "format": "int32"
        },
        "City": {
          "type": "string"
        }
      }
    },
    "OrderTotal": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "City": {
          "type": "string"
        },
        "Amount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}